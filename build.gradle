plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
//	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	testImplementation 'org.springframework.security:spring-security-test'


	implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.2'



	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//springdoc
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	//mapstruct
	implementation 'org.mapstruct:mapstruct:1.6.0.Beta1'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.0.Beta1'

	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

//tasks.named('asciidoctor') {
//	inputs.dir snippetsDir
//	dependsOn test
//}
